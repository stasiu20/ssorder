stages:
  - prepare
  - qa
  - build
  - docker
  - deploy

before_script:
  - cd api/

variables:
  MYSQL_ROOT_PASSWORD: "rootpassword"
  MYSQL_USER: ssorder
  MYSQL_PASSWORD: ssorderpassword
  MYSQL_DATABASE: ssorder

commit-message:
  stage: prepare
  image: morawskim/pipeline-scripts
  script:
    - /pipeline/scripts/check-commit-title.rb $CI_COMMIT_TITLE

branch-name:
  stage: prepare
  image: morawskim/pipeline-scripts
  script:
    - /pipeline/scripts/check-branch-name.rb $CI_COMMIT_REF_NAME
  only:
    - branches
  except:
    refs:
      - /^dependabot\/.*$/

version:
  stage: prepare
  image: morawskim/pipeline-scripts
  script:
    - |
      BRANCH_NAME=$CI_COMMIT_REF_NAME
      if echo $BRANCH_NAME | grep -E '^dependabot\/.*$' ; then
        BRANCH_NAME=develop
      fi
      VERSION=$(/pipeline/scripts/get-version.rb $CI_PROJECT_DIR/.git $BRANCH_NAME $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME)
      echo "VERSION=$VERSION" | tee VERSION
      echo "COMMIT=$CI_COMMIT_SHA" | tee -a VERSION
      echo "PIPELINE=$CI_PIPELINE_ID" | tee -a VERSION
  only:
    - branches
    - merge_requests
  artifacts:
    paths:
      - api/VERSION
    expire_in: 30 days

composer:
  stage: prepare
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
  artifacts:
    paths:
      - api/vendor/
    expire_in: 30 days
    when: on_success
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - /home/php/.composer/cache

diff-composer-packages:
  stage: prepare
  image: morawskim/pipeline-scripts
  script:
    - /pipeline/scripts/prev-file-content.rb $CI_PROJECT_DIR/.git composer.lock > /tmp/composer.lock.old || (test $? -eq 101 && exit 0)
    - /pipeline/scripts/diff-composer.rb /tmp/composer.lock.old > /tmp/composer.old.diff
    - /pipeline/scripts/diff-composer.rb composer.lock > /tmp/composer.diff
    - cat /tmp/composer.old.diff
    - cat /tmp/composer.diff
    - diff -u /tmp/composer.old.diff /tmp/composer.diff || test $? -eq 1
  only:
    changes:
      - api/composer.lock

codestyle:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phpcs | tee phpcs-report.xml
  dependencies:
    - composer
  artifacts:
    when: on_failure
    reports:
      junit: api/phpcs-report.xml

phpmd:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phpmd
  dependencies:
    - composer

phploc:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phploc
  dependencies:
    - composer

phpcpd:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phpcpd
  dependencies:
    - composer

php-lint:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phplint
  dependencies:
    - composer

phpstan:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phpstan
  dependencies:
    - composer

phpdd:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run phpdd
  dependencies:
    - composer

security-checker:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  script:
    - composer run security-checker
  allow_failure: true
  dependencies:
    - composer

phpunit:
  stage: qa
  image: edbizarro/gitlab-ci-pipeline-php:7.3
  services:
    - mysql:5.6
  script:
    - cd ..
    - cp .env.ci .env
    - composer install
    - ./yii migrate/up --interactive 0
    - ./yii fixture/load '*' --interactive 0
    - cd api
    - composer run phpunit-all
  dependencies:
    - composer

.docker:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - composer
    - version
  before_script:
    - source $CI_PROJECT_DIR/api/VERSION
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "" > $CI_PROJECT_DIR/.env
  except:
    - tags
    - api
    - external
    - pipelines
    - schedules
    - triggers
    - web
    - merge_requests
    - chats

docker:develop:
  extends: .docker
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR/api --dockerfile $CI_PROJECT_DIR/api/Dockerfile --destination ${CI_REGISTRY}/${CI_PROJECT_PATH}/api:latest
  only:
    - develop

docker-web:develop:
  extends: .docker
  script:
    - cp $CI_PROJECT_DIR/provision/nginx/vhost-api.conf $CI_PROJECT_DIR/api/nginx-vhost-tmp.conf
    - /kaniko/executor --context $CI_PROJECT_DIR/api --dockerfile $CI_PROJECT_DIR/api/Dockerfile-web --destination ${CI_REGISTRY}/${CI_PROJECT_PATH}/api-web:latest
  only:
    - develop
