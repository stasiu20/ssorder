parameters:
    level: 5
    paths:
        - src
    ignoreErrors:
        - '#Do not use chained method calls\. Put each on separated lines\.#'
        - '#Separate function "sprintf\(\)" in method call to standalone row to improve readability#'
        -
            message: '#Use separate function calls with readable variable names#'
            path: */Exception/*Exception.php
        -
            message: '#Do not use @method tag in class docblock#'
            path: */Repository/*Repository.php
        -
            message: '#\$this as argument is not allowed. Refactor method to service composition#'
            path: */Entity/*.php

    customRulesetUsed: true
    bootstrap: %currentWorkingDirectory%/phpstan-bootstrap.php
    polluteScopeWithLoopInitialAssignments: false
    polluteScopeWithAlwaysIterableForeach: false
    checkAlwaysTrueCheckTypeFunctionCall: true
    checkAlwaysTrueInstanceof: true
    checkAlwaysTrueStrictComparison: true
    checkExplicitMixedMissingReturn: true
    checkFunctionNameCase: true
    reportMaybesInMethodSignatures: true
    reportStaticMethodSignatures: true
includes:
	- %currentWorkingDirectory%/vendor/phpstan/phpstan-deprecation-rules/rules.neon
	- %currentWorkingDirectory%/vendor/timeweb/phpstan-enum/extension.neon
	- /tools/.composer/vendor-bin/phpstan/vendor/symplify/phpstan-rules/config/services/services.neon
	- /tools/.composer/vendor-bin/phpstan/vendor/symplify/phpstan-rules/config/static-rules.neon
	- /tools/.composer/vendor-bin/phpstan/vendor/symplify/phpstan-rules/config/code-complexity-rules.neon
	- /tools/.composer/vendor-bin/phpstan/vendor/symplify/phpstan-rules/packages/cognitive-complexity/config/cognitive-complexity-services.neon
services:
    # bellow are rules from phpstan/phpstan-strict-rules without VariablePropertyFetchRule and VariablePropertyFetchRule rules
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanRuleHelper
    -
        class: PHPStan\Rules\Operators\OperatorRuleHelper
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInBooleanAndRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInBooleanNotRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInBooleanOrRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInElseIfConditionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInIfConditionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\BooleansInConditions\BooleanInTernaryOperatorRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Cast\UselessCastRule
        arguments:
            treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\DisallowedConstructs\DisallowedImplicitArrayCreationRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\ForeachLoop\OverwriteVariablesWithForeachRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Functions\MissingFunctionParameterTypehintRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Functions\MissingFunctionReturnTypehintRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Methods\MissingMethodParameterTypehintRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Methods\MissingMethodReturnTypehintRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Methods\WrongCaseOfInheritedMethodRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandInArithmeticPostDecrementRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandInArithmeticPostIncrementRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandInArithmeticPreDecrementRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandInArithmeticPreIncrementRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticAdditionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticDivisionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticExponentiationRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticModuloRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticMultiplicationRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Operators\OperandsInArithmeticSubtractionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\Properties\MissingPropertyTypehintRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\StrictCalls\DynamicCallOnStaticMethodsRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\StrictCalls\StrictFunctionCallsRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\SwitchConditions\MatchingTypeInSwitchCaseConditionRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\VariableVariables\VariableMethodCallRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\VariableVariables\VariableStaticMethodCallRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\VariableVariables\VariableStaticPropertyFetchRule
        tags:
            - phpstan.rules.rule
    -
        class: PHPStan\Rules\VariableVariables\VariableVariablesRule
        tags:
            - phpstan.rules.rule
    # end phpstan/phpstan-strict-rules
    # start rules from ergebnis/phpstan-rules
    -
        class: Ergebnis\PHPStan\Rules\Expressions\NoCompactRule
        tags:
            - phpstan.rules.rule
    -
        class: Ergebnis\PHPStan\Rules\Expressions\NoErrorSuppressionRule
        tags:
            - phpstan.rules.rule
    -
        class: Ergebnis\PHPStan\Rules\Expressions\NoEvalRule
        tags:
            - phpstan.rules.rule
    # end rules from ergebnis/phpstan-rules