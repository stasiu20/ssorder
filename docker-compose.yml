version: '3.4'
services:
    ssorder:
        build:
            context: frontend
            dockerfile: Dockerfile
            target: intermediate
            args:
                - WITH_XDEBUG=true
        volumes:
            - ./:/app
        depends_on:
            - mysql
        links:
            - mysql
            - rocketchat
            - mailhog
            - minio
        labels:
            traefik.backend: "ssorder"
            traefik.frontend.rule: "Host:ssorder.lvh.me"
        environment:
            COMPOSER_AUTH: '{"github-oauth": {"github.com": "${COMPOSER_GITHUB_OAUTH}"}}'
            PHP_IDE_CONFIG: "serverName=${DEV_SERVER_NAME:-ssorder.lvh.me}"
            XDEBUG_CONFIG: "remote_connect_back=0 remote_host=${MY_IP:-172.17.0.1} remote_enable=1"
    api-web:
        image: nginx:1.19-alpine
        depends_on:
            - api-fpm
        labels:
            traefik.backend: "ssorder-api"
            traefik.frontend.rule: "Host:api.ssorder.lvh.me"
        volumes:
            - ./api:/var/www/html
            - ./provision/nginx/vhost-api.conf:/etc/nginx/conf.d/default.conf
    api-fpm:
        build:
            context: api
            dockerfile: Dockerfile
            target: intermediate
            args:
                - WITH_XDEBUG=true
        volumes:
            - ./api:/var/www/html
        depends_on:
          - mysql
        environment:
            PHP_IDE_CONFIG: "serverName=${DEV_SERVER_NAME:-api.ssorder.lvh.me}"
            XDEBUG_CONFIG: "remote_connect_back=0 remote_host=${MY_IP:-172.17.0.1} remote_enable=1"
    cli:
        image: edbizarro/gitlab-ci-pipeline-php:7.3
        volumes:
            - ./:/app
            - ./provision/xdebug.ini:/usr/local/etc/php/conf.d/xdebug-conf.ini
        user: ${MY_UID:-1000}
        tty: true
        working_dir: /app
        depends_on:
          - mysql
        links:
          - mysql
        environment:
            COMPOSER_AUTH: '{"github-oauth": {"github.com": "${COMPOSER_GITHUB_OAUTH}"}}'
            PHP_IDE_CONFIG: "serverName=${DEV_SERVER_NAME:-ssorder.lvh.me}"
            XDEBUG_CONFIG: "remote_connect_back=0 remote_host=${MY_IP:-172.17.0.1} remote_enable=1"
    mysql:
        image: mysql:5.6
        volumes:
            - mysql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: $DB_DATABASE_NAME
            MYSQL_USER: $DB_USERNAME
            MYSQL_PASSWORD: $DB_PASSWORD
        ports:
            - "3307:3306"
    redis:
        image: redis:5.0-alpine
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - redis:/data
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:4.8
        links:
          - mysql
        environment:
            - PMA_HOST=mysql
        labels:
            traefik.backend: "phpmyadmin"
            traefik.frontend.rule: "Host:phpmyadmin.lvh.me"
    redis-web:
        image: rediscommander/redis-commander:latest
        environment:
            - REDIS_HOSTS=local:redis:6379
        labels:
            traefik.backend: "redis-web"
            traefik.port: "8081"
            traefik.frontend.rule: "Host:redis.lvh.me"
    mailhog:
        image: mailhog/mailhog
        labels:
            traefik.port: "8025"
            traefik.frontend.rule: "Host:mailhog.lvh.me"
    minio:
        image: minio/minio:RELEASE.2019-08-21T19-40-07Z
        volumes:
          - minio:/data
        labels:
            traefik.port: "9000"
            traefik.frontend.rule: "Host:minio.lvh.me"
        environment:
          MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
          MINIO_SECRET_KEY: $MINIO_SECRET_KEY
        command: server /data
        healthcheck:
          test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
          interval: 1m30s
          timeout: 20s
          retries: 3
          start_period: 3m
    rocketchat:
        image: rocketchat/rocket.chat:0.70.2 # upgrade to 0.70.4
        volumes:
            - rocketchat-uploads:/app/uploads
        environment:
            - PORT=3000
            - ROOT_URL=${ROCKETCHAT_URL:-http://localhost:3000}
            - MONGO_URL=mongodb://mongo:27017/rocketchat
            - MONGO_OPLOG_URL=mongodb://mongo:27017/local
            - MAIL_URL=smtp://mailhog:1025
            - ADMIN_USERNAME=admin
            - ADMIN_PASS=admin
            - ADMIN_EMAIL=admin@example.com
    #       - HTTP_PROXY=http://proxy.domain.com
    #       - HTTPS_PROXY=http://proxy.domain.com
        depends_on:
            - mongo
        #ports:
            #- 3001:80
        labels:
            traefik.backend: "rocketchat"
            traefik.frontend.rule: "Host:rocketchat.lvh.me"
            traefik.port: "3000"
        links:
            - mailhog
        external_links:
          - ssorder:ssorder.lvh.me

    mongo:
        image: mongo:3.2
        volumes:
            - mongodb:/data/db
            #- ./data/dump:/dump
        command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
        labels:
            traefik.enable: "false"

    # this container's job is just run the command to initialize the replica set.
    # it will run the command and remove himself (it will not stay running)
    mongo-init-replica:
        image: mongo:3.2
        depends_on:
            - mongo
        command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
        labels:
            traefik.enable: "false"
    traefik:
        image: traefik:1.5
        command: --web --docker --logLevel=DEBUG
        ports:
          - "80:80"
          - "8080:8080"
          - "4443:443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /dev/null:/etc/traefik/traefik.toml
    e2e:
        image: morawskim/node10-google-chrome:74.0.3729.131
        command: sh -c 'cd frontend && npm run e2e'
        volumes:
            - ./:/app
        working_dir: /app
        depends_on:
            - traefik
        links:
            - traefik
        external_links:
            - traefik:ssorder.lvh.me
#    e2e-debug:
#      image: morawskim/node10-google-chrome:74.0.3729.131
#      command: node --inspect-brk=0.0.0.0:9229 ./node_modules/.bin/protractor protractor.conf.js
#      volumes:
#        - ./:/app
#      working_dir: /app/frontend
#      ports:
#        - "9229:9229"
#      depends_on:
#        - traefik
#      links:
#        - traefik
#      external_links:
#        - traefik:ssorder.lvh.me
    newman:
        image: postman/newman:alpine
        volumes:
            - ./integration-tests:/tests
        depends_on:
            - traefik
        links:
            - traefik
        external_links:
            - traefik:ssorder.lvh.me
        entrypoint: '/tests/entrypoint.sh'
    wait:
        image: dokku/wait
    prometheus:
        image: prom/prometheus
        links:
            - ssorder
        volumes:
            - ./provision/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-tsdb:/prometheus
        labels:
            traefik.port: "9090"
            traefik.backend: "prometheus"
            traefik.frontend.rule: "Host: prometheus.lvh.me"
    grafana:
        image: grafana/grafana:6.7.1
#        volumes:
#            - .runtime/grafana:/var/lib/grafana
        environment:
            #- GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1,grafana-simple-json-datasource 1.3.5
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=adminpassword
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_SERVER_DOMAIN=grafana.lvh.me
            - GF_SMTP_ENABLED=true
            - GF_SMTP_FROM_ADDRESS=grafana@ssorder.example
            - GF_SMTP_FROM_NAME=Grafana SSOrder
            - GF_SMTP_HOST=mailhog:1025
            - GF_SMTP_USER=grafana
            - GF_SMTP_PASSWORD=grafanapassword
        labels:
            traefik.port: "3000"
            traefik.backend: "grafana"
            traefik.frontend.rule: "Host: grafana.lvh.me"

volumes:
    mysql:
    redis:
    minio:
    rocketchat-uploads:
    mongodb:
    prometheus-tsdb:
